import React, { useRef, useState, useEffect } from "react";
import "./ModalMensajeWhatsApp.css";
import BotonCancelar from "../Botones/BotonCancelar";
import BotonEnviar from "../Botones/BotonEnviar";
import { diasHastaCumple } from "../../utils/dateUtils";

const mensajeCumpleanios = (nombre) =>
  `üéÇ ¬°Feliz Cumplea√±os ${nombre || "[Nombre]"}! 

De parte de todo el equipo de ANANDA queremos desearte un d√≠a maravilloso. 

¬°Que todos tus deseos se cumplan!
‚ù§Ô∏è`;

const mensajePromocional = (nombre) =>
  `üëã Escribe aqu√≠ tu mensaje promocional o informativo para ${nombre || "el cliente"}.

Saludos,
Equipo ANANDA üíñ`;

const ModalMensajeWhatsApp = ({ open, onClose, cliente, onClienteSaludado, onEnviarMensaje }) => {
  const [exiting, setExiting] = useState(false);
  const timeoutRef = useRef();
  // Estado para verificar si el cliente ya fue saludado
  const [clienteSaludado, setClienteSaludado] = useState(false);
  const [mensaje, setMensaje] = useState("");

  useEffect(() => {
    if (open && cliente) {
      setExiting(false);
      
      // Verificar si el cliente ya fue saludado usando ultimo_saludo de la base de datos
      const yaFueSaludado = !!cliente.ultimo_saludo;
      setClienteSaludado(yaFueSaludado);
      
      // Simplificamos la l√≥gica: si ya est√° saludado ‚Üí mensaje promocional, si no ‚Üí mensaje de cumplea√±os
      if (yaFueSaludado) {
        // Cliente ya saludado - mostrar mensaje promocional
        setMensaje(mensajePromocional(cliente?.nombre));
        console.log(`Cliente ${cliente.id} - Ya saludado: mostrando mensaje PROMOCIONAL`);
      } else {
        // Cliente no saludado - mostrar mensaje de cumplea√±os
        setMensaje(mensajeCumpleanios(cliente?.nombre));
        console.log(`Cliente ${cliente.id} - No saludado: mostrando mensaje de CUMPLEA√ëOS`);
      }
    }
    return () => clearTimeout(timeoutRef.current);
  }, [open, cliente]);

  const handleClose = () => {
    setExiting(true);
    timeoutRef.current = setTimeout(() => {
      setExiting(false);
      onClose();
    }, 450); // Duraci√≥n igual a la animaci√≥n
  };
  
  const handleEnviarMensaje = () => {
    if (!cliente || !cliente.telefono) {
      alert("No se puede enviar el mensaje: el cliente no tiene n√∫mero de tel√©fono.");
      return;
    }
    
    // Eliminar cualquier caracter que no sea n√∫mero del tel√©fono
    const numeroLimpio = cliente.telefono.replace(/\D/g, "");
    
    // Verificar si el n√∫mero tiene el formato correcto
    if (numeroLimpio.length < 8) {
      alert("El n√∫mero de tel√©fono no parece v√°lido.");
      return;
    }
    
    // Formatear el n√∫mero para WhatsApp (agregar c√≥digo de pa√≠s si es necesario)
    let numeroCompleto = numeroLimpio;
    if (!numeroCompleto.startsWith("54")) {
      numeroCompleto = "54" + numeroCompleto;
    }
    
    // Codificar el mensaje para URL
    const mensajeCodificado = encodeURIComponent(mensaje);
    
    // Crear la URL de WhatsApp
    const whatsappUrl = `https://wa.me/${numeroCompleto}?text=${mensajeCodificado}`;
    
    // Marcar al cliente como saludado siempre que se env√≠a un mensaje
    // Usamos onEnviarMensaje si est√° disponible, sino onClienteSaludado (compatibilidad)
    const callbackSaludar = onEnviarMensaje || onClienteSaludado;
    if (typeof callbackSaludar === 'function') {
      console.log(`Marcando cliente ${cliente.id} como saludado despu√©s de enviar WhatsApp`);
      callbackSaludar(cliente);
    }
    
    // Abrir WhatsApp Web en una nueva pesta√±a
    window.open(whatsappUrl, '_blank');
    
    // Cerrar el modal
    handleClose();
  };

  if (!open && !exiting) return null;

  return (
    <div className="modal-whatsapp-backdrop" onClick={handleClose}>
      <div
        className={`modal-whatsapp-container${exiting ? " modal-exit" : ""}`}
        style={{ width: "18rem", height: "24rem" }}
        onClick={e => e.stopPropagation()}
      >
        <div className="modal-whatsapp-header">
          <span className="modal-whatsapp-icon" role="img" aria-label="celular">üì≤</span>
          <span className="modal-whatsapp-title">Enviar mensaje</span>
        </div>
        <div className="modal-whatsapp-subtitle">
          {mensaje.includes("Feliz Cumplea√±os") ? "Mensaje de cumplea√±os..." : "Mensaje promocional..."}
        </div>
        <div className="modal-whatsapp-message-box">
          <textarea
            className="modal-whatsapp-message"
            value={mensaje}
            onChange={e => setMensaje(e.target.value)}
            rows={7}
          />
        </div>
        <div className="modal-whatsapp-actions">
          <BotonCancelar onClick={handleClose} />
          <BotonEnviar onClick={() => handleEnviarMensaje()} />
        </div>
      </div>
    </div>
  );
};

export default ModalMensajeWhatsApp;
